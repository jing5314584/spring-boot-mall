<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boot.mall.mybatis.mapper.ProductDetailMapper">
  <resultMap id="BaseResultMap" type="boot.mall.mybatis.model.ProductDetail">
    <id column="product_idx" jdbcType="INTEGER" property="productIdx" />
    <result column="is_show_matters" jdbcType="INTEGER" property="isShowMatters" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="boot.mall.mybatis.model.ProductDetailWithBLOBs">
    <result column="base_info" jdbcType="LONGVARCHAR" property="baseInfo" />
    <result column="process_info" jdbcType="LONGVARCHAR" property="processInfo" />
    <result column="product_parameter" jdbcType="LONGVARCHAR" property="productParameter" />
    <result column="matters" jdbcType="LONGVARCHAR" property="matters" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_idx, is_show_matters
  </sql>
  <sql id="Blob_Column_List">
    base_info, process_info, product_parameter, matters
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="boot.mall.mybatis.model.ProductDetailExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rsd_product_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="boot.mall.mybatis.model.ProductDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from rsd_product_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rsd_product_detail
    where product_idx = #{productIdx,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rsd_product_detail
    where product_idx = #{productIdx,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="boot.mall.mybatis.model.ProductDetailExample">
    delete from rsd_product_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="boot.mall.mybatis.model.ProductDetailWithBLOBs">
    insert into rsd_product_detail (product_idx, is_show_matters, base_info, 
      process_info, product_parameter, 
      matters)
    values (#{productIdx,jdbcType=INTEGER}, #{isShowMatters,jdbcType=INTEGER}, #{baseInfo,jdbcType=LONGVARCHAR}, 
      #{processInfo,jdbcType=LONGVARCHAR}, #{productParameter,jdbcType=LONGVARCHAR}, 
      #{matters,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="boot.mall.mybatis.model.ProductDetailWithBLOBs">
    insert into rsd_product_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productIdx != null">
        product_idx,
      </if>
      <if test="isShowMatters != null">
        is_show_matters,
      </if>
      <if test="baseInfo != null">
        base_info,
      </if>
      <if test="processInfo != null">
        process_info,
      </if>
      <if test="productParameter != null">
        product_parameter,
      </if>
      <if test="matters != null">
        matters,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productIdx != null">
        #{productIdx,jdbcType=INTEGER},
      </if>
      <if test="isShowMatters != null">
        #{isShowMatters,jdbcType=INTEGER},
      </if>
      <if test="baseInfo != null">
        #{baseInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="processInfo != null">
        #{processInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="productParameter != null">
        #{productParameter,jdbcType=LONGVARCHAR},
      </if>
      <if test="matters != null">
        #{matters,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="boot.mall.mybatis.model.ProductDetailExample" resultType="java.lang.Integer">
    select count(*) from rsd_product_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rsd_product_detail
    <set>
      <if test="record.productIdx != null">
        product_idx = #{record.productIdx,jdbcType=INTEGER},
      </if>
      <if test="record.isShowMatters != null">
        is_show_matters = #{record.isShowMatters,jdbcType=INTEGER},
      </if>
      <if test="record.baseInfo != null">
        base_info = #{record.baseInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.processInfo != null">
        process_info = #{record.processInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.productParameter != null">
        product_parameter = #{record.productParameter,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.matters != null">
        matters = #{record.matters,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update rsd_product_detail
    set product_idx = #{record.productIdx,jdbcType=INTEGER},
      is_show_matters = #{record.isShowMatters,jdbcType=INTEGER},
      base_info = #{record.baseInfo,jdbcType=LONGVARCHAR},
      process_info = #{record.processInfo,jdbcType=LONGVARCHAR},
      product_parameter = #{record.productParameter,jdbcType=LONGVARCHAR},
      matters = #{record.matters,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rsd_product_detail
    set product_idx = #{record.productIdx,jdbcType=INTEGER},
      is_show_matters = #{record.isShowMatters,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="boot.mall.mybatis.model.ProductDetailWithBLOBs">
    update rsd_product_detail
    <set>
      <if test="isShowMatters != null">
        is_show_matters = #{isShowMatters,jdbcType=INTEGER},
      </if>
      <if test="baseInfo != null">
        base_info = #{baseInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="processInfo != null">
        process_info = #{processInfo,jdbcType=LONGVARCHAR},
      </if>
      <if test="productParameter != null">
        product_parameter = #{productParameter,jdbcType=LONGVARCHAR},
      </if>
      <if test="matters != null">
        matters = #{matters,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where product_idx = #{productIdx,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="boot.mall.mybatis.model.ProductDetailWithBLOBs">
    update rsd_product_detail
    set is_show_matters = #{isShowMatters,jdbcType=INTEGER},
      base_info = #{baseInfo,jdbcType=LONGVARCHAR},
      process_info = #{processInfo,jdbcType=LONGVARCHAR},
      product_parameter = #{productParameter,jdbcType=LONGVARCHAR},
      matters = #{matters,jdbcType=LONGVARCHAR}
    where product_idx = #{productIdx,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="boot.mall.mybatis.model.ProductDetail">
    update rsd_product_detail
    set is_show_matters = #{isShowMatters,jdbcType=INTEGER}
    where product_idx = #{productIdx,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="boot.mall.mybatis.model.ProductDetailExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rsd_product_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="boot.mall.mybatis.model.ProductDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from rsd_product_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>