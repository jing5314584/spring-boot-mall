<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boot.mall.mybatis.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="boot.mall.mybatis.model.Order">
    <id column="idx" jdbcType="INTEGER" property="idx" />
    <result column="level_idx" jdbcType="INTEGER" property="levelIdx" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
    <result column="user_idx" jdbcType="INTEGER" property="userIdx" />
    <result column="bill_idx" jdbcType="INTEGER" property="billIdx" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="refund_time" jdbcType="TIMESTAMP" property="refundTime" />
    <result column="total_price" jdbcType="INTEGER" property="totalPrice" />
    <result column="order_name" jdbcType="VARCHAR" property="orderName" />
    <result column="order_content" jdbcType="VARCHAR" property="orderContent" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    idx, level_idx, order_type, user_idx, bill_idx, state, create_time, pay_time, refund_time, 
    total_price, order_name, order_content, memo
  </sql>
  <select id="selectByExample" parameterType="boot.mall.mybatis.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from rsd_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rsd_order
    where idx = #{idx,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rsd_order
    where idx = #{idx,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="boot.mall.mybatis.model.OrderExample">
    delete from rsd_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="boot.mall.mybatis.model.Order">
    <selectKey keyProperty="idx" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rsd_order (level_idx, order_type, user_idx, 
      bill_idx, state, create_time, 
      pay_time, refund_time, total_price, 
      order_name, order_content, memo
      )
    values (#{levelIdx,jdbcType=INTEGER}, #{orderType,jdbcType=INTEGER}, #{userIdx,jdbcType=INTEGER}, 
      #{billIdx,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP}, #{refundTime,jdbcType=TIMESTAMP}, #{totalPrice,jdbcType=INTEGER}, 
      #{orderName,jdbcType=VARCHAR}, #{orderContent,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="boot.mall.mybatis.model.Order">
    <selectKey keyProperty="idx" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rsd_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="levelIdx != null">
        level_idx,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="userIdx != null">
        user_idx,
      </if>
      <if test="billIdx != null">
        bill_idx,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="orderName != null">
        order_name,
      </if>
      <if test="orderContent != null">
        order_content,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="levelIdx != null">
        #{levelIdx,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="userIdx != null">
        #{userIdx,jdbcType=INTEGER},
      </if>
      <if test="billIdx != null">
        #{billIdx,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="orderName != null">
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderContent != null">
        #{orderContent,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="boot.mall.mybatis.model.OrderExample" resultType="java.lang.Integer">
    select count(*) from rsd_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rsd_order
    <set>
      <if test="record.idx != null">
        idx = #{record.idx,jdbcType=INTEGER},
      </if>
      <if test="record.levelIdx != null">
        level_idx = #{record.levelIdx,jdbcType=INTEGER},
      </if>
      <if test="record.orderType != null">
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.userIdx != null">
        user_idx = #{record.userIdx,jdbcType=INTEGER},
      </if>
      <if test="record.billIdx != null">
        bill_idx = #{record.billIdx,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=INTEGER},
      </if>
      <if test="record.orderName != null">
        order_name = #{record.orderName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderContent != null">
        order_content = #{record.orderContent,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rsd_order
    set idx = #{record.idx,jdbcType=INTEGER},
      level_idx = #{record.levelIdx,jdbcType=INTEGER},
      order_type = #{record.orderType,jdbcType=INTEGER},
      user_idx = #{record.userIdx,jdbcType=INTEGER},
      bill_idx = #{record.billIdx,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      refund_time = #{record.refundTime,jdbcType=TIMESTAMP},
      total_price = #{record.totalPrice,jdbcType=INTEGER},
      order_name = #{record.orderName,jdbcType=VARCHAR},
      order_content = #{record.orderContent,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="boot.mall.mybatis.model.Order">
    update rsd_order
    <set>
      <if test="levelIdx != null">
        level_idx = #{levelIdx,jdbcType=INTEGER},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="userIdx != null">
        user_idx = #{userIdx,jdbcType=INTEGER},
      </if>
      <if test="billIdx != null">
        bill_idx = #{billIdx,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundTime != null">
        refund_time = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=INTEGER},
      </if>
      <if test="orderName != null">
        order_name = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderContent != null">
        order_content = #{orderContent,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where idx = #{idx,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="boot.mall.mybatis.model.Order">
    update rsd_order
    set level_idx = #{levelIdx,jdbcType=INTEGER},
      order_type = #{orderType,jdbcType=INTEGER},
      user_idx = #{userIdx,jdbcType=INTEGER},
      bill_idx = #{billIdx,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      refund_time = #{refundTime,jdbcType=TIMESTAMP},
      total_price = #{totalPrice,jdbcType=INTEGER},
      order_name = #{orderName,jdbcType=VARCHAR},
      order_content = #{orderContent,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR}
    where idx = #{idx,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="boot.mall.mybatis.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from rsd_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>